@using SecondHand.Models.Domain;
@using SecondHand.Models.Models.Domain;
@using SecondHand.Utility;
@model SecondHand.Models.ViewModels.AnalystVM
@{
    Layout = "_AdminLayout";
}
<div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Thống kê</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
                    <li class="breadcrumb-item active">Thống kê</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>


<section class="content">
        <div class="container-fluid">

            <div class="row">
                <div class="col-lg col-6">

                    <div class="small-box bg-info">
                        <div class="inner">
                        <p>Tổng đơn hàng</p>

                            <h3>@Model.OrderQuantity</h3>
                        </div>
                        <div class="icon">
                            <i class="ion ion-bag"></i>
                        </div>
                        <a href="#" class="small-box-footer">Xem thêm <i class="fas fa-arrow-circle-right"></i></a>
                    </div>
                </div>

                <div class="col-lg col-6">

                    <div class="small-box bg-success">
                        <div class="inner">
                        <p>Tổng lợi nhuận</p>
                            <h3>@SD.ConvertToCurrencyFormat(Model.TotalSales)</h3>
                        </div>
                        <div class="icon">
                            <i class="ion ion-stats-bars"></i>
                        </div>
                    <a href="#" class="small-box-footer">Xem thêm <i class="fas fa-arrow-circle-right"></i></a>
                    </div>
                </div>

                <div class="col-lg col-6">

                    <div class="small-box bg-warning">
                        <div class="inner">
                        <p>Người dùng mua hàng</p>
                            <h3>@Model.UserQuantity</h3>
                        </div>
                        <div class="icon">
                            <i class="ion ion-person-add"></i>
                        </div>
                    <a href="#" class="small-box-footer">Xem thêm<i class="fas fa-arrow-circle-right"></i></a>
                    </div>
                </div>
            </div>


       
        <div class="card card-success">
            <div class="card-header">
                <h3 class="card-title" style="font-weight: 700;">DOANH THU BÁN HÀNG</h3>

                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="chart">
                    <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
                    <canvas id="barChart" style="min-height: 250px; height: 700px; max-height: 100%; max-width: 100%; display: block; width: 230px;" width="230" height="250" class="chartjs-render-monitor"></canvas>
                </div>
            </div>

        </div>

        </div>
    </section>
<script src="~/plugins/jquery/jquery.min.js"></script>
<script src="~/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- AdminLTE App -->
<script src="~/dist/js/adminlte.min.js"></script>
<!-- AdminLTE for demo purposes -->
<script src="~/plugins/chart.js/chart.min.js"></script>


    <script>

    // Hàm chuyển đổi giá trị thành định dạng VNĐ
    function formatCurrency(value) {
        return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(value);
    }
    // Thêm plugin để tùy chỉnh hiển thị giá trị
    Chart.plugins.register({
        afterDatasetsDraw: function (chart, easing) {
            var ctx = chart.ctx;

            chart.data.datasets.forEach(function (dataset, i) {
                var meta = chart.getDatasetMeta(i);
                if (!meta.hidden) {
                    meta.data.forEach(function (element, index) {
                        // Lấy giá trị từ dataset
                        var data = dataset.data[index];

                        // Chuyển đổi giá trị thành định dạng VNĐ
                        var value = formatCurrency(data);

                        // Vẽ giá trị trên cột
                        ctx.fillStyle = 'black'; // Màu sắc của văn bản
                        ctx.fillText(value, element._model.x, element._model.y - 10); // Điều chỉnh vị trí văn bản
                    });
                }
            });
        }
    });
    $(document).ready(function () {
        var stackedBarChartData = {
            labels: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],
            datasets: [
                {
                    label: 'Doanh thu',
                    backgroundColor: 'rgba(60,141,188,0.9)',
                    borderColor: 'rgba(60,141,188,0.8)',
                    yAxisID: 'doanhThu', // Sử dụng trục thứ nhất
                        data: @Html.Raw(Json.Serialize(Model.TotalSalesPerMonth))
                },
                {
                    label: 'Đơn hàng',
                    backgroundColor: 'rgba(210, 214, 222, 1)',
                    borderColor: 'rgba(210, 214, 222, 1)',
                    yAxisID: 'donHang', // Sử dụng trục thứ hai
                    data: @Html.Raw(Json.Serialize(Model.TotalOrderPermonth))
                },
            ]
        }
        var barChartCanvas = $('#barChart').get(0).getContext('2d');
            var barChartData = $.extend(true, {}, stackedBarChartData)
            var temp0 = stackedBarChartData.datasets[0]
            var temp1 = stackedBarChartData.datasets[1]
                barChartData.datasets[0] = temp0
                barChartData.datasets[1] = temp1
        var barChartOptions = {
            responsive: true,
            maintainAspectRatio: false,
            datasetFill: false,
            scales: {
                xAxes: [{
                    stacked: false,
                }],
                yAxes: [
                    {
                        id: 'doanhThu',
                        position: 'left',
                        gridLines: {
                            display: false,
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'Doanh thu (VNĐ)',
                        },
                    },
                    {
                        id: 'donHang',
                        position: 'right',
                        gridLines: {
                            display: false,
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'Số lượng đơn hàng',
                        },
                    },
                ],
            },
        }
        new Chart(barChartCanvas, {
            type: 'bar',
            data: barChartData,
            options: barChartOptions
        });
    });
    


</script>

